[workspace]
resolver = "2"

members = [
    "rccell",
   "zkay_rs",
   "zkay-derive",
   "zkay-derive-core",
"zkay_rs/compiler/privacy/circuit_generation/circuit_helper",
"zkay_rs/compiler/privacy/circuit_generation",
# "zkay_rs/compiler/privacy/proving_scheme/backends",
"zkay_rs/compiler/privacy/proving_scheme",
"zkay_rs/compiler/privacy/transformation",
"zkay_rs/compiler/privacy",
"zkay_rs/compiler/solidity",
"zkay_rs/compiler",
"zkay_rs/config",
"zkay_rs/errors",
"zkay_rs/examples",
"zkay_rs/jsnark_interface",
"zkay_rs/my_logging",
"zkay_rs/solidity_parser",
"zkay_rs/transaction/blockchain",
"zkay_rs/transaction/crypto",
"zkay_rs/transaction/keystore",
"zkay_rs/transaction/prover",
"zkay_rs/transaction",
"zkay_rs/type_check",
"zkay_rs/utils",
"zkay_rs/zkay_ast",
"zkay_rs/ast-builder",
]

exclude = []
[workspace.package]
edition = "2021"
authors = ["Sam Lee <arron202212@gmail.com>"]
homepage = "https://github.com/arron202212"
license = "MIT"
publish = false
repository = "https://github.com/arron202212/zkay-rs.git"
rust-version = "1.64"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
# [lib]
# proc-macro = true
[workspace.dependencies]
rccell={path="rccell"}
zkay-derive={path="zkay-derive"}
zkay-derive-core={path="zkay-derive-core"}
 circuit_helper={path="zkay_rs/compiler/privacy/circuit_generation/circuit_helper"}
 circuit_generation={path="zkay_rs/compiler/privacy/circuit_generation"}
#  proving_scheme_backends={path="zkay_rs/compiler/privacy/proving_scheme/backends"}
 proving_scheme={path="zkay_rs/compiler/privacy/proving_scheme"}
 transformation={path="zkay_rs/compiler/privacy/transformation"}
 privacy={path="zkay_rs/compiler/privacy"}
 solidity={path="zkay_rs/compiler/solidity"}
 zkay-compiler={path="zkay_rs/compiler"}
 zkay-config={path="zkay_rs/config"}
 zkay-errors={path="zkay_rs/errors"}
 zkay-examples={path="zkay_rs/examples"}
 jsnark_interface={path="zkay_rs/jsnark_interface"}
 my_logging={path="zkay_rs/my_logging"}
 solidity_parser={path="zkay_rs/solidity_parser"}
 zkay-blockchain={path="zkay_rs/transaction/blockchain"}
 zkay-crypto={path="zkay_rs/transaction/crypto"}
 zkay-keystore={path="zkay_rs/transaction/keystore"}
 prover={path="zkay_rs/transaction/prover"}
 zkay-transaction={path="zkay_rs/transaction"}
 type_check={path="zkay_rs/type_check"}
 zkay-utils={path="zkay_rs/utils"}
 zkay_ast={path="zkay_rs/zkay_ast"}
 ast-builder={path="zkay_rs/ast-builder"}
 zkay_rs={path="zkay_rs"}

clap = { version = "4.4.10", features = ["derive", "string"] }
lazy_static = "1.4.0"
antlr-rust = { version = "0.3.0-beta" }
anyhow = "1.0.75"
path-absolutize = "3.1.1"
serde = { version = "1.0.160", features = ["derive"] }
serde_json = "1.0.96"
serde_repr = "0.1.12"
regex = "1.10.2"
semver_rs = "0.2"
app_dirs2 = "2.5.5"
# solc={git="https://github.com/g-r-a-n-t/solc-rust",branch="master"}
# solc={git="https://github.com/Zokrates/solc-rust.git",branch="master"}
zkp-u256 = { git = "https://github.com/patractlabs/OpenZKP", branch = "master" }
textwrap="0.16.0"
eyre = "0.6.8"
num_cpus="1.16.0"
rayon="1.8"
once_cell="1.19"
tiny-keccak = { version = "2.0.0", features = ["keccak"] }
hex="0.4.3"
rs_sha512="0.1.3"
log="0.4.10"
env_logger="0.10.1"
chrono="0.4.31"
bitflags="2.4.2"
dyn-clone = "1.0.16"
heck = "0.4.1"
quote = "1.0.35"
syn = "2.0.50"
proc-macro2 = "1.0"
convert_case="0.6.0"
enum_dispatch="0.3.12"
strum="0.26.1"
strum_macros = "0.26.1"
fancy-regex="0.13.0"
[workspace.dependencies.uuid]
version = "1.6.1"
features = [
    "v4",                # Lets you generate random UUIDs
    "fast-rng",          # Use a faster (but still sufficiently random) RNG
    "macro-diagnostics", # Enable better diagnostics for compile-time UUIDs
]